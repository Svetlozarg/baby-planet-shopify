{% comment %}
  Modern Header Snippet - Simplified for new header structure
  Note: This snippet is now mainly used for compatibility and search bar inclusion
  The main header is now implemented directly in theme.liquid
{% endcomment %}

{% include 'search-bar' %}

<style>
  /* Legacy Header Compatibility Styles */
  .legacy-header-compatibility {
    display: none; /* Hidden by default, only used if needed for backward compatibility */
  }

  /* Search Bar Integration Styles */
  .search-bar-integration {
    position: relative;
    z-index: 999;
  }

  /* Quick View Overlay */
  .quick-view {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    z-index: 10000;
    display: none;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(5px);
  }

  .quick-view.open-in {
    display: flex;
    animation: fadeIn 0.3s ease-out;
  }

  .quick-view.open-out {
    animation: fadeOut 0.3s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  /* Search Bar Type 2 Integration */
  .search-bar-type-2-wrapper {
    position: relative;
    z-index: 998;
  }

  /* Accessibility improvements */
  .sr-only {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
  }

  /* Focus management for header elements */
  .header-focus-trap {
    position: relative;
  }

  .header-focus-trap:focus-within {
    z-index: 1001;
  }

  /* Skip to main content link */
  .skip-to-main {
    position: absolute;
    top: -40px;
    left: 6px;
    background: var(--header-accent, #ff6b9d);
    color: white;
    padding: 8px;
    text-decoration: none;
    border-radius: 4px;
    z-index: 10001;
    transition: top 0.3s ease;
  }

  .skip-to-main:focus {
    top: 6px;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .quick-view {
      background: rgba(0, 0, 0, 0.95);
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .quick-view,
    .quick-view.open-in,
    .quick-view.open-out {
      animation: none;
    }
  }

  /* Print styles */
  @media print {
    .quick-view,
    .search-bar-integration,
    .search-bar-type-2-wrapper {
      display: none !important;
    }
  }
</style>

<!-- Skip to main content for accessibility -->
<a href="#main-content" class="skip-to-main">{{ 'general.accessibility.skip_to_content' | t | default: 'Skip to main content' }}</a>

<!-- Search Bar Integration -->
<div class="search-bar-integration">
  {% comment %}
    Search bar is included here for compatibility with existing search functionality
    The actual search interface is handled by header-model-2 section
  {% endcomment %}
</div>

<!-- Quick View Container -->
<div class="quick-view" role="dialog" aria-modal="true" aria-labelledby="quick-view-title" aria-hidden="true">
  <!-- Quick view content will be dynamically loaded here -->
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Quick view functionality
  const quickView = document.querySelector('.quick-view');

  if (quickView) {
    // Close quick view when clicking outside content
    quickView.addEventListener('click', function(e) {
      if (e.target === quickView) {
        closeQuickView();
      }
    });

    // Keyboard navigation for quick view
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && quickView.classList.contains('open-in')) {
        closeQuickView();
      }
    });

    // Focus trap for quick view
    quickView.addEventListener('keydown', function(e) {
      if (e.key === 'Tab') {
        trapFocus(e, quickView);
      }
    });
  }

  // Quick view utility functions
  function openQuickView() {
    if (quickView) {
      quickView.classList.remove('open-out');
      quickView.classList.add('open-in');
      quickView.setAttribute('aria-hidden', 'false');

      // Prevent body scroll
      document.body.style.overflow = 'hidden';

      // Focus management
      const firstFocusable = quickView.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
      if (firstFocusable) {
        firstFocusable.focus();
      }
    }
  }

  function closeQuickView() {
    if (quickView) {
      quickView.classList.remove('open-in');
      quickView.classList.add('open-out');
      quickView.setAttribute('aria-hidden', 'true');

      // Restore body scroll
      document.body.style.overflow = '';

      // Return focus to trigger element if available
      const trigger = document.querySelector('[data-quick-view-trigger].active');
      if (trigger) {
        trigger.focus();
        trigger.classList.remove('active');
      }

      // Clear content after animation
      setTimeout(() => {
        if (quickView.classList.contains('open-out')) {
          quickView.innerHTML = '';
          quickView.style.display = 'none';
        }
      }, 300);
    }
  }

  // Focus trap utility
  function trapFocus(e, container) {
    const focusableElements = container.querySelectorAll(
      'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
    );

    const firstElement = focusableElements[0];
    const lastElement = focusableElements[focusableElements.length - 1];

    if (e.shiftKey) {
      if (document.activeElement === firstElement) {
        e.preventDefault();
        lastElement.focus();
      }
    } else {
      if (document.activeElement === lastElement) {
        e.preventDefault();
        firstElement.focus();
      }
    }
  }

  // Expose functions globally for compatibility
  window.openQuickView = openQuickView;
  window.closeQuickView = closeQuickView;

  // Enhanced accessibility announcements
  function announceToScreenReader(message) {
    const announcement = document.createElement('div');
    announcement.setAttribute('aria-live', 'polite');
    announcement.setAttribute('aria-atomic', 'true');
    announcement.className = 'sr-only';
    announcement.textContent = message;

    document.body.appendChild(announcement);

    setTimeout(() => {
      document.body.removeChild(announcement);
    }, 1000);
  }

  // Expose announcement function
  window.announceToScreenReader = announceToScreenReader;

  // Header height tracking for smooth scrolling calculations
  function updateHeaderHeight() {
    const header = document.querySelector('.modern-header-wrapper');
    if (header) {
      const height = header.offsetHeight;
      document.documentElement.style.setProperty('--header-height', `${height}px`);
    }
  }

  updateHeaderHeight();
  window.addEventListener('resize', updateHeaderHeight);

  // Performance optimization: Intersection Observer for header visibility
  if ('IntersectionObserver' in window) {
    const headerObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('header-visible');
        } else {
          entry.target.classList.remove('header-visible');
        }
      });
    }, {
      threshold: 0.1
    });

    const header = document.querySelector('.modern-header-wrapper');
    if (header) {
      headerObserver.observe(header);
    }
  }

  // Smooth scrolling enhancement for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
      const href = this.getAttribute('href');
      if (href !== '#' && href.length > 1) {
        const target = document.querySelector(href);
        if (target) {
          e.preventDefault();

          const headerHeight = document.querySelector('.modern-header-wrapper')?.offsetHeight || 0;
          const targetPosition = target.getBoundingClientRect().top + window.pageYOffset - headerHeight - 20;

          window.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
          });

          // Announce navigation to screen readers
          announceToScreenReader(`Navigated to ${target.textContent || target.getAttribute('aria-label') || 'section'}`);
        }
      }
    });
  });

  // Enhanced keyboard navigation
  document.addEventListener('keydown', function(e) {
    // Alt + H: Focus header
    if (e.altKey && e.key === 'h') {
      e.preventDefault();
      const headerLogo = document.querySelector('.header-logo-section a');
      if (headerLogo) {
        headerLogo.focus();
        announceToScreenReader('Focused on header');
      }
    }

    // Alt + M: Focus main navigation
    if (e.altKey && e.key === 'm') {
      e.preventDefault();
      const mainNav = document.querySelector('.site-nav a');
      if (mainNav) {
        mainNav.focus();
        announceToScreenReader('Focused on main navigation');
      }
    }

    // Alt + S: Focus search
    if (e.altKey && e.key === 's') {
      e.preventDefault();
      const searchBtn = document.querySelector('#searchToggle, .search-toggle a');
      if (searchBtn) {
        searchBtn.click();
        announceToScreenReader('Opened search');
      }
    }
  });
});
</script>

{% comment %}
  Legacy compatibility section - only used if old header structure is still referenced
{% endcomment %}
<div class="legacy-header-compatibility">
  <!-- This section is hidden and only used for backward compatibility if needed -->
</div>
