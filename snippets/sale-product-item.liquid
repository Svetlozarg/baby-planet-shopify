{% comment %}
  Enhanced Sale Product Item Snippet
  Displays product with prominent sale indicators and savings information
{% endcomment %}

{% comment %} Calculate discount percentage {% endcomment %}
{% if product.compare_at_price > product.price %}
  {% assign discount_amount = product.compare_at_price | minus: product.price %}
  {% assign discount_percentage = discount_amount | times: 100 | divided_by: product.compare_at_price %}
{% else %}
  {% assign discount_percentage = 0 %}
{% endif %}

<div class="sale-product-item {{ grid_item_width | default: 'wide--one-quarter' }}">
  <div class="sale-product-card">
    {% comment %} Sale Badge {% endcomment %}
    {% if discount_percentage > 0 %}
      <div class="sale-badge-container">
        <div class="sale-badge sale-badge--{{ discount_percentage | divided_by: 10 | times: 10 }}">
          <span class="sale-percentage">-{{ discount_percentage }}%</span>
        </div>
        {% if discount_percentage >= 50 %}
          <div class="hot-deal-badge">üî• –•–ò–¢</div>
        {% endif %}
      </div>
    {% endif %}

    {% comment %} Product Image {% endcomment %}
    <div class="sale-product-image">
      <a href="{{ product.url }}" class="sale-product-link">
        {% if product.featured_image %}
          <img src="{{ product.featured_image | img_url: '400x400' }}"
               alt="{{ product.featured_image.alt | default: product.title }}"
               loading="lazy"
               class="sale-product-img">

          {% comment %} Hover image if available {% endcomment %}
          {% if product.images.size > 1 %}
            <img src="{{ product.images[1] | img_url: '400x400' }}"
                 alt="{{ product.images[1].alt | default: product.title }}"
                 loading="lazy"
                 class="sale-product-img sale-product-img--hover">
          {% endif %}
        {% else %}
          <div class="sale-product-placeholder">
            <svg viewBox="0 0 24 24" width="48" height="48">
              <path d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"/>
            </svg>
          </div>
        {% endif %}
      </a>

      {% comment %} Quick Actions {% endcomment %}
      <div class="sale-product-actions">
        <button class="quick-view-btn" data-product-handle="{{ product.handle }}">
          <svg width="18" height="18" viewBox="0 0 24 24">
            <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>
          </svg>
        </button>

        {% unless product.has_only_default_variant %}
          <button class="quick-add-btn" data-product-handle="{{ product.handle }}">
            <svg width="18" height="18" viewBox="0 0 24 24">
              <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
            </svg>
          </button>
        {% else %}
          <form action="/cart/add" method="post" enctype="multipart/form-data" class="quick-add-form">
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            <button type="submit" class="quick-add-btn">
              <svg width="18" height="18" viewBox="0 0 24 24">
                <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
              </svg>
            </button>
          </form>
        {% endunless %}

        <button class="wishlist-btn" data-product-id="{{ product.id }}">
          <svg width="18" height="18" viewBox="0 0 24 24">
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
          </svg>
        </button>
      </div>
    </div>

    {% comment %} Product Info {% endcomment %}
    <div class="sale-product-info">
      {% comment %} Brand/Vendor {% endcomment %}
      {% if product.vendor != blank %}
        <div class="sale-product-vendor">{{ product.vendor }}</div>
      {% endif %}

      {% comment %} Product Title {% endcomment %}
      <h3 class="sale-product-title">
        <a href="{{ product.url }}" class="sale-product-title-link">
          {{ product.title }}
        </a>
      </h3>

      {% comment %} Product Rating (if available) {% endcomment %}
      {% if product.metafields.reviews.rating %}
        <div class="sale-product-rating">
          {% assign rating = product.metafields.reviews.rating.value %}
          {% for i in (1..5) %}
            {% if i <= rating %}
              <span class="star star--filled">‚òÖ</span>
            {% else %}
              <span class="star">‚òÜ</span>
            {% endif %}
          {% endfor %}
          <span class="rating-count">({{ product.metafields.reviews.rating_count.value | default: 0 }})</span>
        </div>
      {% endif %}

      {% comment %} Price Section {% endcomment %}
      <div class="sale-product-price">
        <div class="price-main">
          <span class="price-current">{{ product.price | money }}</span>
          {% if product.compare_at_price > product.price %}
            <span class="price-original">{{ product.compare_at_price | money }}</span>
          {% endif %}
        </div>

        {% if discount_percentage > 0 %}
          <div class="price-savings">
            –°–ø–µ—Å—Ç—è–≤–∞—Ç–µ {{ discount_amount | money }}
          </div>
        {% endif %}
      </div>

      {% comment %} Sale Timer (if applicable) {% endcomment %}
      {% if product.metafields.sale.end_date %}
        <div class="sale-timer" data-end-date="{{ product.metafields.sale.end_date.value }}">
          <div class="timer-label">–û—Ñ–µ—Ä—Ç–∞—Ç–∞ –∏–∑—Ç–∏—á–∞ —Å–ª–µ–¥:</div>
          <div class="timer-display">
            <span class="timer-days">00</span>–¥
            <span class="timer-hours">00</span>—á
            <span class="timer-minutes">00</span>–º
          </div>
        </div>
      {% endif %}

      {% comment %} Stock Status {% endcomment %}
      {% if product.available %}
        {% assign total_inventory = 0 %}
        {% for variant in product.variants %}
          {% if variant.inventory_management == 'shopify' %}
            {% assign total_inventory = total_inventory | plus: variant.inventory_quantity %}
          {% endif %}
        {% endfor %}

        {% if total_inventory > 0 and total_inventory <= 5 %}
          <div class="stock-status stock-status--low">
            ‚ö†Ô∏è –û—Å—Ç–∞–≤–∞—Ç —Å–∞–º–æ {{ total_inventory }} –±—Ä.
          </div>
        {% elsif total_inventory > 5 %}
          <div class="stock-status stock-status--available">
            ‚úÖ –ù–∞ —Å–∫–ª–∞–¥
          </div>
        {% endif %}
      {% else %}
        <div class="stock-status stock-status--out">
          ‚ùå –ò–∑—á–µ—Ä–ø–∞–Ω
        </div>
      {% endif %}

      {% comment %} Add to Cart Button {% endcomment %}
      <div class="sale-product-actions-main">
        {% if product.available %}
          {% if product.has_only_default_variant %}
            <form action="/cart/add" method="post" enctype="multipart/form-data" class="sale-add-to-cart-form">
              <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
              <button type="submit" class="btn btn--sale btn--add-to-cart">
                <svg width="16" height="16" viewBox="0 0 24 24">
                  <path d="M7 18c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12L8.1 13h7.45c.75 0 1.41-.41 1.75-1.03L21.7 4H5.21l-.94-2H1zm16 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
                </svg>
                –î–æ–±–∞–≤–∏ –≤ –∫–æ—à–Ω–∏—Ü–∞—Ç–∞
              </button>
            </form>
          {% else %}
            <a href="{{ product.url }}" class="btn btn--sale btn--select-options">
              –ò–∑–±–µ—Ä–∏ –æ–ø—Ü–∏–∏
            </a>
          {% endif %}
        {% else %}
          <button class="btn btn--sale btn--notify" disabled>
            –£–≤–µ–¥–æ–º–∏ –º–µ
          </button>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<style>
/* Enhanced Sale Product Item Styles */
.sale-product-item {
  margin-bottom: 2rem;
}

.sale-product-card {
  background: #ffffff;
  border-radius: 20px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  position: relative;
  border: 2px solid transparent;
}

.sale-product-card:hover {
  transform: translateY(-8px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
  border-color: rgba(255, 107, 157, 0.3);
}

/* Sale Badges */
.sale-badge-container {
  position: absolute;
  top: 1rem;
  left: 1rem;
  z-index: 10;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.sale-badge {
  background: linear-gradient(135deg, #ff4757 0%, #ff6b9d 100%);
  color: white;
  padding: 0.5rem 0.75rem;
  border-radius: 12px;
  font-weight: 700;
  font-size: 0.875rem;
  box-shadow: 0 4px 12px rgba(255, 71, 87, 0.4);
  animation: pulse 2s ease-in-out infinite;
}

.sale-badge--50 {
  background: linear-gradient(135deg, #ff6b9d 0%, #ffa8c5 100%);
}

.sale-badge--60 {
  background: linear-gradient(135deg, #ff4757 0%, #ff6b9d 100%);
}

.sale-badge--70 {
  background: linear-gradient(135deg, #ff3838 0%, #ff4757 100%);
}

.hot-deal-badge {
  background: linear-gradient(135deg, #ff9500 0%, #ffb347 100%);
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 8px;
  font-size: 0.75rem;
  font-weight: 600;
  text-align: center;
  animation: glow 1.5s ease-in-out infinite alternate;
}

@keyframes glow {
  from { box-shadow: 0 2px 8px rgba(255, 149, 0, 0.4); }
  to { box-shadow: 0 4px 16px rgba(255, 149, 0, 0.8); }
}

/* Product Image */
.sale-product-image {
  position: relative;
  overflow: hidden;
  aspect-ratio: 1;
  background: #f8f9fa;
}

.sale-product-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: all 0.3s ease;
}

.sale-product-img--hover {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
}

.sale-product-card:hover .sale-product-img--hover {
  opacity: 1;
}

.sale-product-card:hover .sale-product-img:not(.sale-product-img--hover) {
  opacity: 0;
}

.sale-product-placeholder {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  color: #bdc3c7;
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
}

/* Product Actions Overlay */
.sale-product-actions {
  position: absolute;
  top: 1rem;
  right: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  opacity: 0;
  transform: translateX(20px);
  transition: all 0.3s ease;
}

.sale-product-card:hover .sale-product-actions {
  opacity: 1;
  transform: translateX(0);
}

.quick-view-btn,
.quick-add-btn,
.wishlist-btn {
  width: 44px;
  height: 44px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.95);
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  backdrop-filter: blur(10px);
}

.quick-view-btn:hover,
.quick-add-btn:hover,
.wishlist-btn:hover {
  background: #ff6b9d;
  color: white;
  transform: scale(1.1);
}

.quick-view-btn svg,
.quick-add-btn svg,
.wishlist-btn svg {
  fill: currentColor;
}

/* Product Info */
.sale-product-info {
  padding: 1.5rem;
}

.sale-product-vendor {
  font-size: 0.75rem;
  color: #7f8c8d;
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: 0.5px;
  margin-bottom: 0.5rem;
}

.sale-product-title {
  margin: 0 0 0.75rem 0;
  font-size: 1rem;
  line-height: 1.4;
}

.sale-product-title-link {
  color: #2c3e50;
  text-decoration: none;
  font-weight: 600;
  transition: color 0.2s ease;
}

.sale-product-title-link:hover {
  color: #ff6b9d;
}

/* Product Rating */
.sale-product-rating {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
}

.star {
  color: #ffd700;
  font-size: 0.875rem;
}

.star--filled {
  color: #ffd700;
}

.rating-count {
  font-size: 0.75rem;
  color: #7f8c8d;
}

/* Price Section */
.sale-product-price {
  margin-bottom: 1rem;
}

.price-main {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 0.25rem;
}

.price-current {
  font-size: 1.25rem;
  font-weight: 700;
  color: #ff6b9d;
}

.price-original {
  font-size: 1rem;
  color: #7f8c8d;
  text-decoration: line-through;
}

.price-savings {
  font-size: 0.875rem;
  color: #27ae60;
  font-weight: 600;
}

/* Sale Timer */
.sale-timer {
  background: linear-gradient(135deg, #ff6b9d 0%, #ffa8c5 100%);
  color: white;
  padding: 0.75rem;
  border-radius: 12px;
  text-align: center;
  margin-bottom: 1rem;
}

.timer-label {
  font-size: 0.75rem;
  margin-bottom: 0.25rem;
  opacity: 0.9;
}

.timer-display {
  font-weight: 700;
  font-size: 0.875rem;
  letter-spacing: 0.5px;
}

/* Stock Status */
.stock-status {
  padding: 0.5rem 0.75rem;
  border-radius: 8px;
  font-size: 0.75rem;
  font-weight: 600;
  text-align: center;
  margin-bottom: 1rem;
}

.stock-status--available {
  background: rgba(39, 174, 96, 0.1);
  color: #27ae60;
}

.stock-status--low {
  background: rgba(255, 193, 7, 0.1);
  color: #ffc107;
}

.stock-status--out {
  background: rgba(231, 76, 60, 0.1);
  color: #e74c3c;
}

/* Add to Cart Button */
.sale-add-to-cart-form {
  margin: 0;
}

.btn--sale {
  width: 100%;
  padding: 0.75rem 1rem;
  border-radius: 12px;
  font-weight: 600;
  font-size: 0.875rem;
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  text-decoration: none;
}

.btn--add-to-cart {
  background: linear-gradient(135deg, #ff6b9d 0%, #ffa8c5 100%);
  color: white;
}

.btn--add-to-cart:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(255, 107, 157, 0.4);
}

.btn--select-options {
  background: linear-gradient(135deg, #3498db 0%, #74b9ff 100%);
  color: white;
}

.btn--select-options:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(52, 152, 219, 0.4);
}

.btn--notify {
  background: #ecf0f1;
  color: #7f8c8d;
  cursor: not-allowed;
}

.btn--sale svg {
  fill: currentColor;
}

/* Responsive Design */
@media screen and (max-width: 768px) {
  .sale-product-card {
    border-radius: 16px;
  }

  .sale-product-info {
    padding: 1.25rem;
  }

  .sale-product-title {
    font-size: 0.9rem;
  }

  .price-current {
    font-size: 1.125rem;
  }

  .sale-product-actions {
    position: static;
    flex-direction: row;
    justify-content: center;
    opacity: 1;
    transform: none;
    padding: 1rem;
    background: rgba(248, 249, 250, 0.95);
  }

  .quick-view-btn,
  .quick-add-btn,
  .wishlist-btn {
    width: 40px;
    height: 40px;
  }
}

@media screen and (max-width: 480px) {
  .sale-product-info {
    padding: 1rem;
  }

  .sale-product-title {
    font-size: 0.875rem;
  }

  .price-current {
    font-size: 1rem;
  }

  .btn--sale {
    padding: 0.625rem 0.75rem;
    font-size: 0.8rem;
  }

  .sale-badge-container {
    top: 0.75rem;
    left: 0.75rem;
  }

  .sale-badge {
    padding: 0.375rem 0.5rem;
    font-size: 0.75rem;
  }

  .hot-deal-badge {
    padding: 0.25rem 0.375rem;
    font-size: 0.7rem;
  }
}
</style>

<script>
// Sale Product Item Functionality
document.addEventListener('DOMContentLoaded', function() {
  // Initialize sale timers
  initializeSaleTimers();

  // Handle quick add to cart
  handleQuickAddToCart();

  // Handle wishlist functionality
  handleWishlist();
});

function initializeSaleTimers() {
  const timers = document.querySelectorAll('.sale-timer');

  timers.forEach(timer => {
    const endDate = new Date(timer.dataset.endDate);

    function updateTimer() {
      const now = new Date();
      const timeLeft = endDate - now;

      if (timeLeft > 0) {
        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));

        timer.querySelector('.timer-days').textContent = days.toString().padStart(2, '0');
        timer.querySelector('.timer-hours').textContent = hours.toString().padStart(2, '0');
        timer.querySelector('.timer-minutes').textContent = minutes.toString().padStart(2, '0');
      } else {
        timer.innerHTML = '<div class="timer-expired">–û—Ñ–µ—Ä—Ç–∞—Ç–∞ –∏–∑—Ç–µ—á–µ</div>';
      }
    }

    updateTimer();
    setInterval(updateTimer, 60000); // Update every minute
  });
}

function handleQuickAddToCart() {
  const quickAddForms = document.querySelectorAll('.sale-add-to-cart-form');

  quickAddForms.forEach(form => {
    form.addEventListener('submit', function(e) {
      e.preventDefault();

      const formData = new FormData(form);
      const button = form.querySelector('.btn--add-to-cart');
      const originalText = button.innerHTML;

      button.innerHTML = '<svg class="spinner" width="16" height="16" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" fill="none" stroke-dasharray="60" stroke-dashoffset="60"><animate attributeName="stroke-dashoffset" dur="1s" values="60;0" repeatCount="indefinite"/></circle></svg> –î–æ–±–∞–≤—è —Å–µ...';
      button.disabled = true;

      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        button.innerHTML = '‚úì –î–æ–±–∞–≤–µ–Ω';
        button.style.background = '#27ae60';

        // Update cart count if cart drawer exists
        updateCartCount();

        setTimeout(() => {
          button.innerHTML = originalText;
          button.disabled = false;
          button.style.background = '';
        }, 2000);
      })
      .catch(error => {
        console.error('Error adding to cart:', error);
        button.innerHTML = originalText;
        button.disabled = false;
      });
    });
  });
}

function handleWishlist() {
  const wishlistBtns = document.querySelectorAll('.wishlist-btn');

  wishlistBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      const productId = this.dataset.productId;

      // Toggle wishlist state (implement based on your wishlist system)
      this.classList.toggle('wishlist-btn--active');

      if (this.classList.contains('wishlist-btn--active')) {
        this.style.background = '#ff6b9d';
        this.style.color = 'white';
      } else {
        this.style.background = '';
        this.style.color = '';
      }
    });
  });
}

function updateCartCount() {
  fetch('/cart.js')
    .then(response => response.json())
    .then(cart => {
      const cartCountElements = document.querySelectorAll('.cart-count');
      cartCountElements.forEach(element => {
        element.textContent = cart.item_count;
      });
    })
    .catch(error => console.error('Error updating cart count:', error));
}
</script>
